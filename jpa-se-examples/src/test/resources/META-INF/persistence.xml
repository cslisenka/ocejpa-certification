<persistence xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd" version="2.0">
    <persistence-unit name="testJpaMySQL" transaction-type="RESOURCE_LOCAL">
        <!--
            1. Validation provider should be in classpath.
            2. If validation provider is container managed = AUTO, if not = CALLBACK
        -->
        <validation-mode>CALLBACK</validation-mode>
        <properties>
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/testjpa"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="root"/>

            <!-- Hibernate properties -->
            <property name="hibernate.hbm2ddl.auto" value="update"/>
            <property name="hibernate.cache.use_second_level_cache" value="false"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.validator.apply_to_ddl" value="true"/>
            <!--property name="hibernate.generate_statistics" value="true"/-->

            <!--property name="org.hibernate.flushMode" value="MANUAL"/-->
            <!--property name="hibernate.connection.isolation" value="1"/--> <!-- ISOLATION_READ_UNCOMMITED -->
            <!--property name="hibernate.connection.isolation" value="2"/--> <!-- ISOLATION_READ_COMMITED -->
            <!--property name="hibernate.connection.isolation" value="4"/--> <!-- ISOLATION_REPEATABLE_READ -->
            <!--property name="hibernate.connection.isolation" value="8"/--> <!-- ISOLATION_SERIALIZABLE -->

            <property name="javax.persistence.schema-generation.scripts.action" value="drop-and-create"/>
            <property name="javax.persistence.schema-generation.scripts.create-target" value="target/create.sql"/>
            <property name="javax.persistence.schema-generation.scripts.drop-target" value="target/drop.sql"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="testSecondLevelCache" transaction-type="RESOURCE_LOCAL">
        <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
        <properties>
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/testjpa"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="root"/>

            <!-- 2-nd level cache properties -->
            <property name="hibernate.cache.use_second_level_cache" value="true"/>
            <property name="hibernate.cache.use_query_cache" value="true"/>
            <property name="hibernate.generate_statistics" value="true"/>
            <!--
                Prefer using EhCacheRegionFactory instead of SingletonEhCacheRegionFactory. Using EhCacheRegionFactory means that Hibernate will create separate cache regions for Hibernate caching, instead of trying to reuse cache regions defined elsewhere in the application.
            -->
            <property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory "/>
            <property name="hibernate.cache.provider_configuration_file_resource_path" value="ehcache.xml" />

            <!-- ENABLE_SELECTIVE - Cached only entities with @Cacheable(true)
            DISABLE_SELECTIVE - Cached all entities except @Cacheable(false) -->
            <property name="javax.persistence.sharedCache.mode" value="ENABLE_SELECTIVE"/>

            <!-- Hibernate properties -->
            <property name="hibernate.hbm2ddl.auto" value="none"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.validator.apply_to_ddl" value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="testJpaPostgres" transaction-type="RESOURCE_LOCAL">
        <validation-mode>CALLBACK</validation-mode>
        <properties>
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/testjpa"/>
            <property name="javax.persistence.jdbc.user" value="postgres"/>
            <property name="javax.persistence.jdbc.password" value="root"/>

            <!-- Hibernate properties -->
            <property name="hibernate.hbm2ddl.auto" value="update"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.validator.apply_to_ddl" value="true"/>
            <property name="hibernate.generate_statistics" value="true"/>
        </properties>
    </persistence-unit>
</persistence>