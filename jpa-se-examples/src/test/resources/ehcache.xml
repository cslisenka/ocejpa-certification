<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="ehcache.xsd"
     updateCheck="true" monitoring="autodetect" dynamicConfig="true">

    <!-- Information:
        http://techblog.personalcapital.com/2014/04/hibernate-second-level-cache-using-ehcache/

        http://blog.jhades.org/setup-and-gotchas-of-the-hibernate-second-level-and-query-caches/
    -->

    <!--
        Directory where ehcache stores cached entities in case of full memory
        Useful when database is on another server with slow connection
     -->
    <diskStore path="java.io.tmpdir/hibernateCache" />

    <!-- If no matching cache for entity/query found, Hibernate uses default cache -->
    <defaultCache maxElementsInMemory="100" diskPersistent="false"/>

    <!--
        Cache regions: we need to define regions for specific entities. If no region defined, default cache used.

        eternal = true - disable remove entities by timeout
        timeToIdleSeconds - timeout for not used items are removed from cache
        timeToLiveSeconds - timeout each item removed from cache
    -->
    <cache name="net.slisenko.jpa.examples.caching.CachedEntity" maxElementsInMemory="1000"
           eternal="true" timeToIdleSeconds="1800" timeToLiveSeconds="3000" overflowToDisk="false"/>

    <cache name="net.slisenko.jpa.examples.caching.CachedEntity.relationship" maxElementsInMemory="1000"
           eternal="true" timeToIdleSeconds="1800" timeToLiveSeconds="3000" overflowToDisk="false"/>

    <cache name="net.slisenko.jpa.examples.caching.CachedEntityRelationship" maxElementsInMemory="1000"
           eternal="true" timeToIdleSeconds="1800" timeToLiveSeconds="3000" overflowToDisk="false"/>


    <!--
        Query cache in Hibernate
    -->
    <cache name="org.hibernate.cache.internal.StandardQueryCache" maxElementsInMemory="5000"
           eternal="false" timeToIdleSeconds="1800" timeToLiveSeconds="3000"
           overflowToDisk="false" diskExpiryThreadIntervalSeconds="60" memoryStoreEvictionPolicy="LRU" />

    <!--
        Tracks the timestamps of the most recent updates to particular tables.
        It is important that the cache timeout of the underlying cache implementation be set to a higher value than the timeouts of any of the query caches.
        In fact, it is recommend that the the underlying cache not be configured for expiry at all
    -->
    <cache name="org.hibernate.cache.spi.UpdateTimestampsCache" maxElementsInMemory="5000" eternal="true" />
</ehcache>